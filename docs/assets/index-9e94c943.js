var u=Object.defineProperty;var m=(o,e,t)=>e in o?u(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var a=(o,e,t)=>(m(o,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();var l=(o=>(o[o.LEFT=0]="LEFT",o[o.RIGHT=1]="RIGHT",o[o.UP=2]="UP",o[o.DOWN=3]="DOWN",o))(l||{});const p={ArrowLeft:0,ArrowRight:1,ArrowUp:2,ArrowDown:3};class h{constructor(e){this.position=e,this.position=e}update(e,t){}draw(e,t,i){}keyboardEventDown(e){}keyboardEventUp(e){}restart(){}}class f extends h{constructor(t,i,s="green",n){super(t);a(this,"active");this.position=t,this.size=i,this.color=s,this.gameManager=n,this.size=i,this.color=s,this.gameManager=n,this.active=!0}update(t){}draw(t){this.active&&(t.fillStyle=this.color,t.beginPath(),t.arc(this.position.x+this.size.w/2,this.position.y+this.size.h/2,this.size.w/2,0,2*Math.PI),t.closePath(),t.fill())}setActive(){this.active=!1}setPosition(t){this.position=t,this.active=!0}}class y extends h{constructor(t={x:400,y:25}){super(t);a(this,"score");this.position=t,this.score=0}updateScore(){this.score++}draw(t){t.font="24px Arial",t.fillStyle="black",t.fillText(`Score: ${this.score}`,this.position.x,this.position.y)}}class g extends h{constructor(t,i,s="#ffd60a",n=10,r,c){super(t);a(this,"speed");a(this,"direction");a(this,"body");a(this,"bodyLength");a(this,"delta1");a(this,"score");this.position=t,this.size=i,this.color=s,this.maxSpeed=n,this.gameManager=r,this.scoreViewer=c,this.speed={x:n,y:0},this.direction="right",this.bodyLength=3,this.body=this.generateInitialBody(),this.delta1=0,this.score=0}generateInitialBody(){const t=[];for(let i=0;i<this.bodyLength;i++)t.push({x:this.position.x-i*this.size.w,y:this.position.y});return t}draw(t){t.fillStyle=this.color,t.fillRect(this.position.x,this.position.y,this.size.w,this.size.h);for(const i of this.body)t.fillStyle=this.color,t.fillRect(i.x,i.y,this.size.w,this.size.h)}update(t){if(this.delta1+=t,this.delta1>=.25){const i=this.position.x+this.speed.x,s=this.position.y+this.speed.y;i<0||i+this.size.w>this.gameManager.canvas.width||s<0||s+this.size.h>this.gameManager.canvas.height?this.delta1=0:(this.moveSnake(i,s),this.delta1-=.25)}}increaseSize(t=1){const i=this.body[this.body.length-1];this.body.push(i),this.direction="right",this.score+=t,this.scoreViewer.updateScore()}moveSnake(t,i){const s=[];s.unshift({x:t,y:i});for(let n=1;n<this.body.length;n++)s.push(this.body[n-1]);this.body=s,this.position.x=t,this.position.y=i,this.checkSelfCollision()&&this.gameManager.endGame()}checkSelfCollision(){for(let t=1;t<this.body.length;t++)if(this.position.x===this.body[t].x&&this.position.y===this.body[t].y)return!0;return!1}keyboardEvent(t){switch(t){case l.LEFT:this.direction!=="right"&&(this.speed.x=-this.maxSpeed,this.speed.y=0,this.direction="left");break;case l.RIGHT:this.direction!=="left"&&(this.speed.x=this.maxSpeed,this.speed.y=0,this.direction="right");break;case l.UP:this.direction!=="down"&&(this.speed.y=-this.maxSpeed,this.speed.x=0,this.direction="up");break;case l.DOWN:this.direction!=="up"&&(this.speed.y=this.maxSpeed,this.speed.x=0,this.direction="down");break}}}class w extends h{constructor(t={x:0,y:0}){super(t);a(this,"audio");this.position=t,this.audio=new Audio,this.audio.src="melody.mp3",this.audio.autoplay=!0,this.audio.loop=!0,this.audio.volume=.03}update(t){this.audio.play()}}class x extends h{constructor(t={x:0,y:0},i={w:40,h:40}){super(t);a(this,"initialPosition");a(this,"image");a(this,"imagePositions");a(this,"currentImagePosition");a(this,"timer");this.position=t,this.size=i,this.initialPosition=t,this.image=new Image,this.image.src="SNAKE.jpeg",this.imagePositions=[0,1,2],this.currentImagePosition=0,this.timer=0}draw(t,i){t.translate(this.position.x,this.position.y),t.drawImage(this.image,0,0,this.size.w,this.size.h,this.position.x,this.position.y,this.size.w,this.size.h),t.translate(-this.position.x,-this.position.y)}}class b extends h{constructor(t={x:10,y:25}){super(t);a(this,"frameCount",0);a(this,"fps",0);this.position=t}update(t){this.frameCount++,this.fps=1/t}draw(t){t.font="18px Consolas",t.fillStyle="#000",t.fillText(`FPS: ${this.fps.toFixed(0)}`,this.position.x,this.position.y)}}class k extends h{constructor(t={x:190,y:25}){super(t);a(this,"timeElapsed",0);this.position=t}update(t){this.timeElapsed+=t}draw(t){t.font="bold 18px Consolas",t.fillStyle="blue",t.fillText(`Time: ${this.timeElapsed.toFixed(1)}s`,this.position.x,this.position.y)}}class S{constructor(e){a(this,"actors");a(this,"apple");a(this,"scoreViewer");a(this,"snake");a(this,"ekans");a(this,"music");a(this,"fpsViewer");a(this,"timer");a(this,"lastTimestamp");this.canvas=e,this.canvas.style.backgroundImage='url("src/assets/img/SNAKE.jpeg")',this.ekans=new x,this.ekans.image.onload=()=>{this.start()},this.timer=new k,this.scoreViewer=new y,this.fpsViewer=new b,this.music=new w,this.snake=new g({x:40,y:240},{w:20,h:20},"red",20,this,this.scoreViewer),this.apple=new f(this.generateRandomPosition(this.canvas),{w:20,h:20},"blue",this),this.actors=[this.ekans,this.snake,this.apple,this.scoreViewer,this.fpsViewer,this.timer],this.lastTimestamp=0,this.start()}generateNewApplePosition(){let e=this.generateRandomPosition(this.canvas);for(;this.isCollisionWithSnake(e);)e=this.generateRandomPosition(this.canvas);this.apple.setPosition(e),this.increaseScore()}isCollisionWithSnake(e){for(const t of this.snake.body)if(t.x===e.x&&t.y===e.y)return!0;return!1}generateRandomPosition(e){const t=Math.floor(Math.random()*(e.width-20)),i=Math.floor(Math.random()*(e.height-20)),s=Math.ceil(t/20)*20,n=Math.ceil(i/20)*20;return{x:s,y:n}}checkCollision(){const e=this.snake.position,t=this.apple.position,i=this.snake.size,s=Math.abs(e.x-t.x)<=i.w/2,n=Math.abs(e.y-t.y)<=i.h/2;s&&n&&(this.snake.increaseSize(),this.generateNewApplePosition())}update(e){this.lastTimestamp||(this.lastTimestamp=e);const t=(e-this.lastTimestamp)/1e3;this.lastTimestamp=e,this.snake.update(t),this.fpsViewer.update(t),this.timer.update(t),this.actors.forEach(i=>{i.update(t)}),this.checkCollision(),requestAnimationFrame(i=>this.update(i))}start(){requestAnimationFrame(e=>this.update(e))}endGame(){console.log("Game over")}increaseScore(){console.log("Score increased")}}window.onload=()=>{const o=document.getElementById("canvas"),e=o.getContext("2d"),t=new S(o),{actors:i}=t;let s=0;const n=r=>{let c=(r-s)/1e3;s=r,i.forEach(d=>{d.update(c)}),e.clearRect(0,0,o.width,o.height),i.forEach(d=>{e.save(),d.draw(e),e.restore()}),window.requestAnimationFrame(n)};window.requestAnimationFrame(n),document.body.addEventListener("keydown",r=>{const c=r.key;if(c in p){const d=p[c];t.snake.keyboardEvent(d)}})};
